#Область ПрограммныйИнтерфейс

// Отправляет Issue в GitLab
//
// Параметры:
// ЗаданиеНаРаботу - ДокументСсылка.ЗаданиеНаРаботу
//
Асинх Процедура ОтправитьIssue(Знач ЗаданиеНаРаботу) Экспорт
	
	Если Не ЗначениеЗаполнено(ЗаданиеНаРаботу) Тогда
		Возврат;
	КонецЕсли; 
	
	Если ТипЗнч(ЗаданиеНаРаботу) <> Тип("ДокументСсылка.ЗаданиеНаРаботу") Тогда
		Возврат;
	КонецЕсли;
	
	АнализСтрока = НСтр("ru = 'Анализ'");
	Если Не АнализСтрока = Пр_КорпоративнаяСистемаGitLabВстраиваниеУНФВызовСервера.СтатусЗаданияНаРаботу(ЗаданиеНаРаботу) Тогда 
		Пр_ОбменGitLabВызовСервера.ЗаписьОшибокОтправки(НСтр("ru = 'Отправка Issue GitLab'"),
														НСтр("ru = 'Статус задания на работу не равен статусу ""Анализ"". Операция отменена'"),
														ЗаданиеНаРаботу);  
		Возврат;
	КонецЕсли;   
	       
	Если Не Пр_ОбменGitLabВызовСервера.СтатусРегистрацииЗаданияНаРаботу(ЗаданиеНаРаботу) Тогда
		Возврат;	
	КонецЕсли;
	
	Попытка
		
		АдресСервера = Пр_ОбменGitLabВызовСервера.АдресСервераGitLab();
		Соединение = Новый HTTPСоединение(АдресСервера);
		
		Если ПустаяСтрока(АдресСервера) Тогда
			Пр_ОбменGitLabВызовСервера.ЗаписьОшибокОтправки(НСтр("ru = 'Отправка Issue GitLab'"),
															НСтр("ru = 'Не заполнен адрес сервера GitLab'"),
															ЗаданиеНаРаботу);
			Возврат;
		КонецЕсли;
		
		ТокенДоступа = Пр_ОбменGitLabВызовСервера.ТокенДоступаПроектаЗаданияНаРаботу(ЗаданиеНаРаботу);
		Если ПустаяСтрока(ТокенДоступа) Тогда
			Пр_ОбменGitLabВызовСервера.ЗаписьОшибокОтправки(НСтр("ru = 'Отправка Issue GitLab'"),
															НСтр("ru = 'Не удалось получить токен доступа проекта"),
															ЗаданиеНаРаботу);
			Возврат;
		КонецЕсли;
		
		Тело = Пр_ОбменGitLabВызовСервера.СформироватьТелоIssue(ЗаданиеНаРаботу); 
		Если ПустаяСтрока(Тело) Тогда  
			Пр_ОбменGitLabВызовСервера.ЗаписьОшибокОтправки(НСтр("ru = 'Отправка Issue GitLab'"),
															НСтр("ru = 'Не удалось сформировать тело Issue'"),
															ЗаданиеНаРаботу);
			Возврат;
		КонецЕсли;  
		
		НомерПроекта = Пр_ОбменGitLabВызовСервера.НомерПроектаЗаданияНаРаботу(ЗаданиеНаРаботу);  
		Если ПустаяСтрока(НомерПроекта) Тогда
			Пр_ОбменGitLabВызовСервера.ЗаписьОшибокОтправки(НСтр("ru = 'Отправка Issue GitLab'"),
														    НСтр("ru = 'Не удалось получить проект задания на работу'"),
															ЗаданиеНаРаботу); 
			Возврат;
		КонецЕсли;

		ШаблонОбращения = СтрШаблон("api/v4/projects/%1/issues", НомерПроекта);
		Заголовки = Новый Соответствие;
		Заголовки.Вставить("Content-type", "application/json");
		Заголовки.Вставить("Authorization", ТокенДоступа);
		Запрос = Новый HTTPЗапрос(ШаблонОбращения, Заголовки);

		Запрос.УстановитьТелоИзСтроки(Тело);
		Ответ = Ждать Соединение.ОтправитьДляОбработкиАсинх(Запрос);
		СтруктураОтвета = ПрочитатьЗначениеJSON(Ответ.ПолучитьТелоКакСтроку());
		
		Отправлено = Пр_ОбменGitLabВызовСервера.ОбработатьОтветОтправкиIssue(ЗаданиеНаРаботу, СтруктураОтвета);
		
		Если Отправлено Тогда
			Пр_ОбменGitLabВызовСервера.ЗафиксироватьОтправкуIssue(ЗаданиеНаРаботу);
		КонецЕсли;
		
	Исключение
		Пр_ОбменGitLabВызовСервера.ЗаписьОшибокОтправки(НСтр("ru = 'Отправка Issue GitLab'"),
													    ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
														ЗаданиеНаРаботу); 
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти