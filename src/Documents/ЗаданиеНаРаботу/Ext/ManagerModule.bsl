#Если Сервер Или ВнешнееСоединение Или ТолстыйКлиентОбычноеПриложение Тогда
	
#Область СлужебныеПроцедурыИФункции

#Область ДляВызоваИзДругихПодсистем

&После("ДобавитьКомандыПечати")
Процедура Пр_ДобавитьКомандыПечати(КомандыПечати)
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ТехническоеЗаданиеWord";
	КомандаПечати.Представление = НСтр("ru = 'Техническое задание (Word)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Ложь;
	КомандаПечати.Порядок = 2;
	КомандаПечати.Картинка = БиблиотекаКартинок.Word32;
	
КонецПроцедуры

&ИзменениеИКонтроль("Печать")
Процедура Пр_Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаданияНаРаботу") Тогда

		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаданияНаРаботу", НСтр("ru = 'Задание на работу'"), ПечатнаяФорма(МассивОбъектов, ОбъектыПечати));

	КонецЕсли;   
	
	#Вставка
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТехническоеЗаданиеWord") Тогда
		
		ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм,"ТехническоеЗаданиеWord");
		Если ПечатнаяФорма <> Неопределено Тогда
			ПечатнаяФорма.ОфисныеДокументы = ПечатьТехническоеЗадание(МассивОбъектов);
			ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Техническое задание (Word)'");
		КонецЕсли;
		
	КонецЕсли;
	#КонецВставки

	// параметры отправки печатных форм по электронной почте
	ЭлектроннаяПочтаУНФ.ЗаполнитьПараметрыОтправки(ПараметрыВывода.ПараметрыОтправки, МассивОбъектов, 
	КоллекцияПечатныхФорм);

КонецПроцедуры

#КонецОбласти

// Формирует соответствие офисных документов
//
// Параметры:
// МассивОбъектов - Массив
//	*Массив ссылок объектов на печать
//
// Возвращаемое значение:
// Соответствие
//
функция ПечатьТехническоеЗадание(МассивОбъектов)
	
	ОфисныеДокументы = Новый Соответствие;
	
	Шаблон = НСтр("ru = 'Техническое задание [Номер] от [Дата]'");
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъектов(МассивОбъектов, "Номер, Дата", Истина);
	
	Для Каждого ТехЗадание Из МассивОбъектов Цикл
		
		РеквизитыЗадания = ЗначенияРеквизитов[ТехЗадание];
		РеквизитыЗадания.Дата = Формат(РеквизитыЗадания.Дата, "ДЛФ=DD");
		РеквизитыЗадания.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(РеквизитыЗадания.Номер);
		
		ИмяДокумента = СтроковыеФункцииКлиентСервер.ВставитьПараметрыВСтроку(Шаблон, РеквизитыЗадания);
		АдресДокумента = СформироватьТехническоеЗадание(ТехЗадание);
		
		ОфисныеДокументы.Вставить(АдресДокумента, ИмяДокумента);
		
	КонецЦикла;
	
	Возврат ОфисныеДокументы;
	
КонецФункции

// Формирует печатную форму и помещает в ВХ
//
// Параметры:
// ЗаданиеНаРаботу - ДокументСсылка.ЗаданиеНаРаботу
//
// Возвращаемое значение:
// Строка
//
Функция СформироватьТехническоеЗадание(ЗаданиеНаРаботу)
	
	МакетДокумента = УправлениеПечатью.МакетПечатнойФормы("Документ.ЗаданиеНаРаботу.Пр_ПФ_DOCX_ТехническоеЗадание", "ru_RU");
	Макет = УправлениеПечатью.ИнициализироватьМакетОфисногоДокумента(МакетДокумента, Неопределено);
	
	ОписаниеОбластей = Новый Структура;
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Шапка", "Общая");
	УправлениеПечатью.ДобавитьОписаниеОбласти(ОписаниеОбластей, "Основное", "Общая");
	
	ПечатнаяФорма = УправлениеПечатью.ИнициализироватьПечатнуюФорму(Неопределено, Неопределено, Макет);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ        
		|	ЗаданиеНаРаботу.Ссылка КАК ЗаданиеНаРаботу,
		|	ЗаданиеНаРаботу.Номер КАК Номер,
		|	ЗаданиеНаРаботу.Дата КАК Дата,
		|	ЗаданиеНаРаботу.Организация КАК Организация,
		|	ЗаданиеНаРаботу.Пр_Проект КАК Проект,
		|	ЗаданиеНаРаботу.Автор КАК Автор,
		|	Проекты.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.ЗаданиеНаРаботу КАК ЗаданиеНаРаботу
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО ЗаданиеНаРаботу.Пр_Проект = Проекты.Ссылка
		|ГДЕ
		|	ЗаданиеНаРаботу.Ссылка = &ЗаданиеНаРаботу";
	
	Запрос.УстановитьПараметр("ЗаданиеНаРаботу", ЗаданиеНаРаботу);
	Результат = Запрос.Выполнить().Выгрузить();   
	Если Результат.Количество() Тогда 
		
		ДанныеДокумента = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Результат[0]);
		ДанныеДокумента.Дата = Формат(ДанныеДокумента.Дата, "ДЛФ=DD");
		ДанныеДокумента.Номер = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеДокумента.Номер);
		ДанныеДокумента.Вставить("Описание", ДанныеДокумента.ЗаданиеНаРаботу.Работы[0].Комментарий);
		
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Шапка"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента);
		
		Область = УправлениеПечатью.ОбластьМакета(Макет, ОписаниеОбластей["Основное"]);
		УправлениеПечатью.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеДокумента); 
		
		АдресВХ = УправлениеПечатью.СформироватьДокумент(ПечатнаяФорма);
		
		УправлениеПечатью.ОчиститьСсылки(ПечатнаяФорма);
		УправлениеПечатью.ОчиститьСсылки(Макет);
		
	КонецЕсли;
	
	АдресВХ = ?(ПустаяСтрока(АдресВХ), "", АдресВХ);
	Возврат АдресВХ;
	
КонецФункции

#КонецОбласти

#КонецЕсли