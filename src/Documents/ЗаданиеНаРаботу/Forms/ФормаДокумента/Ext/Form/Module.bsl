#Область ОбработчикиСобытий

&НаСервере
Процедура Пр_ПриСозданииНаСервереПосле(Отказ, СтандартнаяОбработка)
	
	Пр_МодификацияФормСервер.ПриСозданииНаСервере(ЭтотОбъект, СтандартнаяОбработка, Отказ);
	ПрочитатьСтатусЗадания(Объект.Ссылка); 
	
КонецПроцедуры 

&НаСервере
Процедура Пр_ПриЧтенииНаСервереПосле(ТекущийОбъект)
	
	Если Элементы.Найти("Пр_Статус") <> Неопределено Тогда
		ПрочитатьСтатусЗадания(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти   

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура Пр_ПроектОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, ВыборДобавлением, СтандартнаяОбработка)
	
	Объект.КалендарьСотрудника = ПроверитьСоздатьКалендарьПоПроекту(ВыбранноеЗначение);
	
КонецПроцедуры

#КонецОбласти   

#Область СлужебныеПроцедурыИФункции

// Обновляет статус задания на работу
// 
// Параметры:
// ЗаданиеНаРаботу - ДокументСсылка.ЗаданиеНаРаботу
//
&НаСервере
Процедура ПрочитатьСтатусЗадания(Знач ЗаданиеНаРаботу)

	Если Не ЗначениеЗаполнено(ЗаданиеНаРаботу) Тогда 	
		ЭтотОбъект.Пр_Статус = НСтр("ru = 'Необработанное'"); 
		Возврат;
	КонецЕсли;                      
	
	ЭтотОбъект.Пр_Статус = Пр_КорпоративнаяСистемаGitLabВстраиваниеУНФСервер.СтатусЗаданияНаРаботу(Объект.Ссылка);
	
КонецПроцедуры

// Создает или находит новый календарь сотрудника
//
// Параметры:
// Проект - СправочникСсылка.Проекты
//
// Возвращаемое значение:
// СправочникСсылка.КалендариСотрудников
//
&НаСервереБезКонтекста
Функция ПроверитьСоздатьКалендарьПоПроекту(Знач Проект)
	
	Возврат Пр_КорпоративнаяСистемаGitLabВстраиваниеУНФСервер.КалендарьСотрудникаПоПроекту(Проект);
	
КонецФункции

#КонецОбласти                                   