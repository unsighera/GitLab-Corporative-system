
&ИзменениеИКонтроль("СформироватьТаблицуБазыРаспределенияФинансовогоРезультата")
Функция Пр_СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(БазаРаспределения, ФильтрПоСтруктурнаяЕдиница, ФильтрПоНаправлениеДеятельности, ФильтрПоЗаказ, ФильтрПоПроект)

	ТаблицаРезультата = Новый ТаблицаЗначений;

	Запрос = Новый Запрос;

	Если БазаРаспределения = Перечисления.БазыРаспределенияРасходов.ВыручкаОтПродаж
		ИЛИ БазаРаспределения = Перечисления.БазыРаспределенияРасходов.СебестоимостьПродаж
		ИЛИ БазаРаспределения = Перечисления.БазыРаспределенияРасходов.ОбъемПродаж
		ИЛИ БазаРаспределения = Перечисления.БазыРаспределенияРасходов.ВаловаяПрибыль Тогда

		Если БазаРаспределения = Перечисления.БазыРаспределенияРасходов.ВыручкаОтПродаж Тогда
			ТекстБазы = "СУММА(ПродажиОбороты.СуммаОборот)";
		ИначеЕсли БазаРаспределения = Перечисления.БазыРаспределенияРасходов.СебестоимостьПродаж Тогда 
			ТекстБазы = "СУММА(ПродажиОбороты.СебестоимостьОборот)";
		ИначеЕсли БазаРаспределения = Перечисления.БазыРаспределенияРасходов.ВаловаяПрибыль Тогда 
			ТекстБазы = "СУММА(ПродажиОбороты.СуммаОборот - ПродажиОбороты.СебестоимостьОборот)";
		Иначе
			ТекстБазы = "СУММА(ПродажиОбороты.КоличествоОборот)";
		КонецЕсли; 
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПродажиОбороты.Организация КАК Организация,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ПродажиОбороты.ЗаказПокупателя КАК Заказ,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности.СчетУчетаВыручкиОтПродаж КАК СчетУчетаВыручкиОтПродаж,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности.СчетУчетаСебестоимостиПродаж КАК СчетУчетаСебестоимостиПродаж,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности.СчетУчетаПрибыли КАК СчетУчетаПрибыли,
		|	// ТекстБазы КАК База,
		|	ПродажиОбороты.Подразделение КАК СтруктурнаяЕдиница,
		|	ПродажиОбороты.Проект КАК Проект   
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(
		|			&НачДата,
		|			&КонДата,
		|			Авто,
		|			Организация = &Организация
		|				// ФильтрПоСтруктурнаяЕдиница
		|				// ФильтрПоПроект
		|				// ФильтрПоНаправлениеДеятельности
		|				// ФильтрПоЗаказ
		|			) КАК ПродажиОбороты
		|ГДЕ
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Организация,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности,
		|	ПродажиОбороты.ЗаказПокупателя,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности.СчетУчетаВыручкиОтПродаж,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности.СчетУчетаСебестоимостиПродаж,
		|	ПродажиОбороты.Номенклатура.НаправлениеДеятельности.СчетУчетаПрибыли,
		|	ПродажиОбороты.Подразделение,
		|	ПродажиОбороты.Проект";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ФильтрПоСтруктурнаяЕдиница", ?(ЗначениеЗаполнено(ФильтрПоСтруктурнаяЕдиница), "И Подразделение В (&МассивСтруктурныхЕдиниц)", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ФильтрПоПроект", ?(ЗначениеЗаполнено(ФильтрПоПроект), "И Проект В (&МассивПроектов)", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ФильтрПоНаправлениеДеятельности", ?(ЗначениеЗаполнено(ФильтрПоНаправлениеДеятельности), "И Номенклатура.НаправлениеДеятельности В (&МассивНаправленийДеятельности)", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ФильтрПоЗаказ", ?(ЗначениеЗаполнено(ФильтрПоЗаказ), "И ЗаказПокупателя В (&МассивЗаказов)", ""));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ТекстБазы", ТекстБазы);

	Иначе
		Возврат ТаблицаРезультата;
	КонецЕсли;

	Запрос.Текст = ТекстЗапроса;

	Запрос.УстановитьПараметр("НачДата"    , ДополнительныеСвойства.ДляПроведения.НачальнаяДатаПериода);
	Запрос.УстановитьПараметр("КонДата"    , ДополнительныеСвойства.ДляПроведения.КонечнаяДатаПериод);
	Запрос.УстановитьПараметр("Организация", ДополнительныеСвойства.ДляПроведения.Организация);

	Если ЗначениеЗаполнено(ФильтрПоЗаказ) Тогда
		Если ТипЗнч(ФильтрПоЗаказ) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("МассивЗаказов", ФильтрПоЗаказ);
		Иначе
			МассивДляОтбора = Новый Массив;
			МассивДляОтбора.Добавить(ФильтрПоЗаказ);
			Запрос.УстановитьПараметр("МассивЗаказов", МассивДляОтбора);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ФильтрПоСтруктурнаяЕдиница) Тогда
		Если ТипЗнч(ФильтрПоСтруктурнаяЕдиница) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("МассивСтруктурныхЕдиниц", ФильтрПоСтруктурнаяЕдиница);
		Иначе
			МассивДляОтбора = Новый Массив;
			МассивДляОтбора.Добавить(ФильтрПоСтруктурнаяЕдиница);
			Запрос.УстановитьПараметр("МассивСтруктурныхЕдиниц", МассивДляОтбора);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ФильтрПоПроект) Тогда
		Если ТипЗнч(ФильтрПоПроект) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("МассивПроектов", ФильтрПоПроект);
		Иначе
			МассивДляОтбора = Новый Массив;
			МассивДляОтбора.Добавить(ФильтрПоПроект);
			Запрос.УстановитьПараметр("МассивПроектов", МассивДляОтбора);
		КонецЕсли;
	КонецЕсли;

	Если ЗначениеЗаполнено(ФильтрПоНаправлениеДеятельности) Тогда
		Если ТипЗнч(ФильтрПоНаправлениеДеятельности) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("МассивНаправленийДеятельности", ФильтрПоНаправлениеДеятельности);
		Иначе
			МассивДляОтбора = Новый Массив;
			МассивДляОтбора.Добавить(ФильтрПоНаправлениеДеятельности);
			Запрос.УстановитьПараметр("МассивНаправленийДеятельности", ФильтрПоНаправлениеДеятельности);
		КонецЕсли;
	КонецЕсли;
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	
	#Вставка     
	ТаблицаРезультата.Колонки.Добавить("ДействующееРаспределение"); 
	ТаблицаРезультата.Колонки.Добавить("ВсегоБазаРаспределения");
	// Сделаем группировку вручную
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.Проект КАК Проект,
		|	Т.Расход КАК Расход
		|ИЗ
		|	РегистрСведений.Пр_ДействующееРаспределение.СрезПоследних(&КонДата, // ФильтрПоПроект) КАК Т
		|ИТОГИ ПО
		|	Проект";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "// ФильтрПоПроект", ?(ЗначениеЗаполнено(ФильтрПоПроект), "Проект В (&МассивПроектов)", ""));
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	ВыборкаПроект = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПроект.Следующий() Цикл
		
		МассивРасходов = Новый Массив;
				
		Выборка = ВыборкаПроект.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивРасходов.Добавить(Выборка.Расход);		
		КонецЦикла; 
		
		Выборка.Сбросить(); 
		
		Если МассивРасходов.Количество() Тогда
			
			СтрокиПоПроекту = ТаблицаРезультата.НайтиСтроки(Новый Структура("Проект", ВыборкаПроект.Проект));
			Для Каждого СтрокаБазы Из СтрокиПоПроекту Цикл
				СтрокаБазы.ДействующееРаспределение = МассивРасходов;
			КонецЦикла;                                              
			Продолжить;
			
		КонецЕсли;

		
	КонецЦикла;	
	#КонецВставки
	
	Возврат ТаблицаРезультата;
	
КонецФункции

&ИзменениеИКонтроль("РассчитатьФинансовыйРезультат")
Процедура Пр_РассчитатьФинансовыйРезультат(Отказ, ТаблицаОшибок)

	// 1) Прямое распределение.
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоходыИРасходыОбороты.Организация КАК Организация,
	|	ДоходыИРасходыОбороты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ДоходыИРасходыОбороты.Проект КАК Проект,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности.СчетУчетаПрибыли КАК СчетУчетаПрибыли,
	|	ДоходыИРасходыОбороты.ЗаказПокупателя КАК Заказ,
	|	ДоходыИРасходыОбороты.СчетУчета КАК СчетУчета,
	|	ДоходыИРасходыОбороты.Аналитика КАК Аналитика,
	|	СУММА(ДоходыИРасходыОбороты.СуммаДоходовОборот) КАК СуммаДоходов,
	|	СУММА(ДоходыИРасходыОбороты.СуммаРасходовОборот) КАК СуммаРасходов
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходы.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Организация = &Организация
	|				И (СчетУчета.СпособРаспределения = ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияРасходов.НеРаспределять)
	|					ИЛИ (НаправлениеДеятельности.СчетУчетаСебестоимостиПродаж = СчетУчета
	|						ИЛИ НаправлениеДеятельности.СчетУчетаВыручкиОтПродаж = СчетУчета)
	|						И НаправлениеДеятельности <> ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее))) КАК ДоходыИРасходыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыОбороты.Организация,
	|	ДоходыИРасходыОбороты.СтруктурнаяЕдиница,
	|	ДоходыИРасходыОбороты.Проект,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности.СчетУчетаПрибыли,
	|	ДоходыИРасходыОбороты.ЗаказПокупателя,
	|	ДоходыИРасходыОбороты.СчетУчета,
	|	ДоходыИРасходыОбороты.Аналитика";

	Запрос.УстановитьПараметр("Организация", ДополнительныеСвойства.ДляПроведения.Организация);
	Запрос.УстановитьПараметр("НачДата"    , ДополнительныеСвойства.ДляПроведения.НачальнаяДатаПериода);
	Запрос.УстановитьПараметр("КонДата"    , ДополнительныеСвойства.ДляПроведения.КонечнаяГраницаПериода);

	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		// Создадим набор записей регистра накопления Финансовый результат.
		НаборЗаписейФинансовыйРезультат = РегистрыНакопления.ФинансовыйРезультат.СоздатьНаборЗаписей();
		НаборЗаписейФинансовыйРезультат.Отбор.Регистратор.Установить(ДополнительныеСвойства.ДляПроведения.Ссылка);

		// Создадим набор записей регистра бухгалтерии "Управленческий".
		НаборЗаписейУправленческий = РегистрыБухгалтерии.Управленческий.СоздатьНаборЗаписей();
		НаборЗаписейУправленческий.Отбор.Регистратор.Установить(Ссылка);

	КонецЕсли;

	ВыборкаРезультатЗапроса = РезультатЗапроса.Выбрать();

	Пока ВыборкаРезультатЗапроса.Следующий() Цикл

		// Движения по регистру Финансовый результат.
		НоваяСтрока = НаборЗаписейФинансовыйРезультат.Добавить();
		НоваяСтрока.Период = Дата;
		НоваяСтрока.Регистратор = Ссылка;
		НоваяСтрока.Организация = ВыборкаРезультатЗапроса.Организация;
		НоваяСтрока.СтруктурнаяЕдиница = ВыборкаРезультатЗапроса.СтруктурнаяЕдиница;
		НоваяСтрока.Проект = ВыборкаРезультатЗапроса.Проект;
		НоваяСтрока.НаправлениеДеятельности = ?(ЗначениеЗаполнено(ВыборкаРезультатЗапроса.НаправлениеДеятельности), 
		ВыборкаРезультатЗапроса.НаправлениеДеятельности, Справочники.НаправленияДеятельности.ОсновноеНаправление);
		НоваяСтрока.ЗаказПокупателя = ВыборкаРезультатЗапроса.Заказ;
		НоваяСтрока.СчетУчета = ВыборкаРезультатЗапроса.СчетУчета;
		НоваяСтрока.Аналитика = ВыборкаРезультатЗапроса.Аналитика;

		Если ВыборкаРезультатЗапроса.СуммаДоходов <> 0 Тогда
			НоваяСтрока.СуммаДоходов = ВыборкаРезультатЗапроса.СуммаДоходов;
		ИначеЕсли ВыборкаРезультатЗапроса.СуммаРасходов <> 0 Тогда
			НоваяСтрока.СуммаРасходов = ВыборкаРезультатЗапроса.СуммаРасходов;
		КонецЕсли;

		НоваяСтрока.СодержаниеПроводки = "Финансовый результат";

		// Движения по регистру Управленческий.
		НоваяСтрока = НаборЗаписейУправленческий.Добавить();
		НоваяСтрока.Период = Дата;
		НоваяСтрока.Регистратор = Ссылка;
		НоваяСтрока.Организация = ВыборкаРезультатЗапроса.Организация;
		НоваяСтрока.СценарийПланирования = Справочники.СценарииПланирования.Фактический;

		Если ВыборкаРезультатЗапроса.СуммаДоходов <> 0 Тогда
			НоваяСтрока.СчетДт = ВыборкаРезультатЗапроса.СчетУчета;
			НоваяСтрока.СчетКт = ?(
			ЗначениеЗаполнено(ВыборкаРезультатЗапроса.НаправлениеДеятельности),
			ВыборкаРезультатЗапроса.СчетУчетаПрибыли,
			Справочники.НаправленияДеятельности.ОсновноеНаправление.СчетУчетаПрибыли);
			НоваяСтрока.Сумма = ВыборкаРезультатЗапроса.СуммаДоходов; 
		ИначеЕсли ВыборкаРезультатЗапроса.СуммаРасходов <> 0 Тогда
			НоваяСтрока.СчетДт = ?(
			ЗначениеЗаполнено(ВыборкаРезультатЗапроса.НаправлениеДеятельности),
			ВыборкаРезультатЗапроса.СчетУчетаПрибыли,
			Справочники.НаправленияДеятельности.ОсновноеНаправление.СчетУчетаПрибыли);
			НоваяСтрока.СчетКт = ВыборкаРезультатЗапроса.СчетУчета;
			НоваяСтрока.Сумма = ВыборкаРезультатЗапроса.СуммаРасходов;
		КонецЕсли;

		НоваяСтрока.Содержание = "Финансовый результат";

	КонецЦикла;

	Если НЕ РезультатЗапроса.Пустой() Тогда

		// Пишем оставшиеся записи Финансовый результат.
		НаборЗаписейФинансовыйРезультат.Записать(Ложь);

		// Пишем оставшиеся записи Управленческий.
		НаборЗаписейУправленческий.Записать(Ложь);

	КонецЕсли;

	// 2) Распределение по базе распределения.        
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоходыИРасходыОбороты.Организация КАК Организация,
	|	ДоходыИРасходыОбороты.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ДоходыИРасходыОбороты.Проект КАК Проект,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности.СчетУчетаПрибыли КАК СчетУчетаПрибыли,
	|	ДоходыИРасходыОбороты.ЗаказПокупателя КАК Заказ,
	|	ДоходыИРасходыОбороты.СчетУчета КАК СчетУчета,
	|	ДоходыИРасходыОбороты.Аналитика КАК Аналитика,
	|	ДоходыИРасходыОбороты.СчетУчета.СпособРаспределения КАК СчетУчетаСпособРаспределения,
	|	СУММА(ДоходыИРасходыОбороты.СуммаДоходовОборот) КАК СуммаДоходов,
	|	СУММА(ДоходыИРасходыОбороты.СуммаРасходовОборот) КАК СуммаРасходов
	|ИЗ
	|	РегистрНакопления.ДоходыИРасходы.Обороты(
	|			&НачДата,
	|			&КонДата,
	|			Авто,
	|			Организация = &Организация
	|				И СчетУчета.СпособРаспределения <> ЗНАЧЕНИЕ(Перечисление.БазыРаспределенияРасходов.НеРаспределять)
	|				И (НаправлениеДеятельности.СчетУчетаСебестоимостиПродаж <> СчетУчета
	|						И НаправлениеДеятельности.СчетУчетаВыручкиОтПродаж <> СчетУчета
	|					ИЛИ НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.Прочее)
	|					ИЛИ НаправлениеДеятельности = ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК ДоходыИРасходыОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыИРасходыОбороты.Организация,
	|	ДоходыИРасходыОбороты.СтруктурнаяЕдиница,
	|	ДоходыИРасходыОбороты.Проект,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности,
	|	ДоходыИРасходыОбороты.НаправлениеДеятельности.СчетУчетаПрибыли,
	|	ДоходыИРасходыОбороты.ЗаказПокупателя,
	|	ДоходыИРасходыОбороты.СчетУчета,
	|	ДоходыИРасходыОбороты.Аналитика,
	|	ДоходыИРасходыОбороты.СчетУчета.СпособРаспределения
	|
	|УПОРЯДОЧИТЬ ПО
	|	СчетУчетаСпособРаспределения,
	|	Проект,
	|	СтруктурнаяЕдиница,
	|	НаправлениеДеятельности,
	|	Заказ
	|ИТОГИ
	|	СУММА(СуммаДоходов),
	|	СУММА(СуммаРасходов)
	|ПО
	|	СчетУчетаСпособРаспределения,
	|	Проект,
	|	СтруктурнаяЕдиница,
	|	НаправлениеДеятельности,
	|	Заказ";     
	
	РезультатЗапроса = Запрос.Выполнить();

	Если НЕ РезультатЗапроса.Пустой() Тогда

		// Создадим набор записей регистра накопления Учет запасов и затрат.
		НаборЗаписейФинансовыйРезультат = РегистрыНакопления.ФинансовыйРезультат.СоздатьНаборЗаписей();
		НаборЗаписейФинансовыйРезультат.Отбор.Регистратор.Установить(ДополнительныеСвойства.ДляПроведения.Ссылка);

		// Создадим набор записей регистра накопления Учет доходов и расходов.
		НаборЗаписейУправленческий = РегистрыБухгалтерии.Управленческий.СоздатьНаборЗаписей();
		НаборЗаписейУправленческий.Отбор.Регистратор.Установить(Ссылка);

	Иначе

		Возврат;

	КонецЕсли;

	ОбходПоСпособРаспределения = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Обход по способам распределения.
	Пока ОбходПоСпособРаспределения.Следующий() Цикл

		ОбходПоПроектам = ОбходПоСпособРаспределения.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

		// Обход по проектам.
		Пока ОбходПоПроектам.Следующий() Цикл

			ФильтрПоПроект = ОбходПоПроектам.Проект;

			ОбходПоСтруктурнаяЕдиница = ОбходПоПроектам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			// Обход по подразделениям.
			Пока ОбходПоСтруктурнаяЕдиница.Следующий() Цикл

				ФильтрПоСтруктурнаяЕдиница = ОбходПоСтруктурнаяЕдиница.СтруктурнаяЕдиница;

				ОбходПоНаправлениеДеятельности = ОбходПоСтруктурнаяЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

				// Обход по направлениям деятельности.
				Пока ОбходПоНаправлениеДеятельности.Следующий() Цикл

					ФильтрПоНаправлениеДеятельности = ОбходПоНаправлениеДеятельности.НаправлениеДеятельности;

					ОбходПоЗаказ = ОбходПоНаправлениеДеятельности.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					// Обход по заказам.
					Пока ОбходПоЗаказ.Следующий() Цикл

						ФильтрПоЗаказ = ОбходПоЗаказ.Заказ;

						Если ОбходПоЗаказ.СчетУчетаСпособРаспределения = Перечисления.БазыРаспределенияРасходов.НеРаспределять Тогда
							Продолжить;
						КонецЕсли;

						// Сформируем таблицу базы распределения.
						ТаблицаБазыПоСтруктурнойЕдинице = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
						ОбходПоЗаказ.СчетУчетаСпособРаспределения,
						ФильтрПоСтруктурнаяЕдиница,
						Неопределено,
						Неопределено,
						Неопределено);

						Если ТаблицаБазыПоСтруктурнойЕдинице.Количество() > 0 Тогда

							ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
							ОбходПоЗаказ.СчетУчетаСпособРаспределения,
							ФильтрПоСтруктурнаяЕдиница,
							ФильтрПоНаправлениеДеятельности,
							ФильтрПоЗаказ,
							ФильтрПоПроект);

							Если ТаблицаБазы.Количество() = 0 Тогда
								ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
								ОбходПоЗаказ.СчетУчетаСпособРаспределения,
								ФильтрПоСтруктурнаяЕдиница,
								ФильтрПоНаправлениеДеятельности,
								Неопределено,
								ФильтрПоПроект);
							КонецЕсли;

							Если ТаблицаБазы.Количество() = 0 Тогда
								ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
								ОбходПоЗаказ.СчетУчетаСпособРаспределения,
								ФильтрПоСтруктурнаяЕдиница,
								Неопределено,
								Неопределено,
								ФильтрПоПроект);
							КонецЕсли;

							Если ТаблицаБазы.Количество() = 0 Тогда
								ТаблицаБазы = ТаблицаБазыПоСтруктурнойЕдинице;
							КонецЕсли;

						Иначе

							ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
							ОбходПоЗаказ.СчетУчетаСпособРаспределения,
							Неопределено,
							ФильтрПоНаправлениеДеятельности,
							ФильтрПоЗаказ,
							ФильтрПоПроект);

							Если ТаблицаБазы.Количество() = 0 Тогда
								ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
								ОбходПоЗаказ.СчетУчетаСпособРаспределения,
								Неопределено,
								ФильтрПоНаправлениеДеятельности,
								Неопределено,
								ФильтрПоПроект);
							КонецЕсли;

							Если ТаблицаБазы.Количество() = 0 Тогда
								ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
								ОбходПоЗаказ.СчетУчетаСпособРаспределения,
								Неопределено,
								Неопределено,
								Неопределено,
								ФильтрПоПроект);
							КонецЕсли;

							Если ТаблицаБазы.Количество() = 0 Тогда
								ТаблицаБазы = СформироватьТаблицуБазыРаспределенияФинансовогоРезультата(
								ОбходПоЗаказ.СчетУчетаСпособРаспределения,
								Неопределено,
								Неопределено,
								Неопределено,
								Неопределено);
							КонецЕсли;

						КонецЕсли;

						Если ТаблицаБазы.Количество() > 0 Тогда
							ВсегоБазаРаспределения = ТаблицаБазы.Итог("База");
							КоличествоНаправлений  = ТаблицаБазы.Количество() - 1;
						Иначе
							ВсегоБазаРаспределения = 0;
							КоличествоНаправлений  = 0;
						КонецЕсли;

						ОбходПоСчетамУчета = ОбходПоЗаказ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						// Обход по счетам затрат.
						Пока ОбходПоСчетамУчета.Следующий() Цикл

							Если ТаблицаБазы.Количество() = 0
								ИЛИ ВсегоБазаРаспределения = 0 Тогда
								ТаблицаБазы = Новый ТаблицаЗначений;
								ТаблицаБазы.Колонки.Добавить("Организация");
								ТаблицаБазы.Колонки.Добавить("СтруктурнаяЕдиница");
								ТаблицаБазы.Колонки.Добавить("Проект");
								ТаблицаБазы.Колонки.Добавить("НаправлениеДеятельности");
								ТаблицаБазы.Колонки.Добавить("Заказ");
								ТаблицаБазы.Колонки.Добавить("СчетУчетаВыручкиОтПродаж");
								ТаблицаБазы.Колонки.Добавить("СчетУчетаСебестоимостиПродаж");
								ТаблицаБазы.Колонки.Добавить("СчетУчетаПрибыли");
								ТаблицаБазы.Колонки.Добавить("База");
								СтрокаТаблицы = ТаблицаБазы.Добавить();
								СтрокаТаблицы.Организация = ОбходПоСчетамУчета.Организация;
								СтрокаТаблицы.СтруктурнаяЕдиница = ОбходПоСчетамУчета.СтруктурнаяЕдиница;
								СтрокаТаблицы.Проект = ОбходПоСчетамУчета.Проект;
								СтрокаТаблицы.НаправлениеДеятельности = Справочники.НаправленияДеятельности.ОсновноеНаправление;
								СтрокаТаблицы.Заказ = ОбходПоСчетамУчета.Заказ;
								СтрокаТаблицы.СчетУчетаВыручкиОтПродаж = ОбходПоСчетамУчета.СчетУчета;
								СтрокаТаблицы.СчетУчетаСебестоимостиПродаж = ОбходПоСчетамУчета.СчетУчета;
								СтрокаТаблицы.СчетУчетаПрибыли = Справочники.НаправленияДеятельности.ОсновноеНаправление.СчетУчетаПрибыли;
								СтрокаТаблицы.База = 1;
								ВсегоБазаРаспределения = 1;
							КонецЕсли;

							// Распределяем сумму.
							Если ОбходПоСчетамУчета.СуммаДоходов <> 0 
								ИЛИ ОбходПоСчетамУчета.СуммаРасходов <> 0 Тогда

								Если ОбходПоСчетамУчета.СуммаДоходов <> 0 Тогда
									СуммаКРаспределению = ОбходПоСчетамУчета.СуммаДоходов;
								ИначеЕсли ОбходПоСчетамУчета.СуммаРасходов <> 0 Тогда
									СуммаКРаспределению = ОбходПоСчетамУчета.СуммаРасходов;
								КонецЕсли;

								СуммаРаспределили = 0; 
								
                                #Вставка    
								ВсегоБазаРаспределенияПоПроектам = 0;
								Для Каждого НаправлениеРаспределения Из ТаблицаБазы Цикл       
									
									Если НаправлениеРаспределения.ДействующееРаспределение = Неопределено Тогда
										Продолжить;
									КонецЕсли;
									
									ИндексЗатраты = НаправлениеРаспределения.ДействующееРаспределение.Найти(ОбходПоСчетамУчета.СчетУчета);
									Если ИндексЗатраты = Неопределено Тогда
										Продолжить;
									КонецЕсли;
									
									ВсегоБазаРаспределенияПоПроектам = ВсегоБазаРаспределенияПоПроектам + НаправлениеРаспределения.База;
									
								КонецЦикла;
								
								ИспользуетсяБазаРаспределенияПоПроектам = ?(ВсегоБазаРаспределенияПоПроектам <> 0, Истина, Ложь);
								#КонецВставки  
								
								Для каждого НаправлениеРаспределения Из ТаблицаБазы Цикл
									
									#Вставка  
									Если ИспользуетсяБазаРаспределенияПоПроектам Тогда    
										
										Если НаправлениеРаспределения.ДействующееРаспределение = Неопределено Тогда
											Продолжить;
										КонецЕсли;
										
										ИндексЗатраты = НаправлениеРаспределения.ДействующееРаспределение.Найти(ОбходПоСчетамУчета.СчетУчета);
										Если ИндексЗатраты = Неопределено Тогда
											Продолжить;
										КонецЕсли;      
										
										СуммаЗатрат = ?(СуммаКРаспределению = 0, 0, Окр(НаправлениеРаспределения.База / ВсегоБазаРаспределенияПоПроектам * СуммаКРаспределению, 2, 1));
										
									Иначе   
										
										СуммаЗатрат = ?(СуммаКРаспределению = 0, 0, Окр(НаправлениеРаспределения.База / ВсегоБазаРаспределения * СуммаКРаспределению, 2, 1));
										
									КонецЕсли;
									#КонецВставки
									#Удаление
									СуммаЗатрат = ?(СуммаКРаспределению = 0, 0, Окр(НаправлениеРаспределения.База / ВсегоБазаРаспределения * СуммаКРаспределению, 2, 1));
									#КонецУдаления
									СуммаРаспределили = СуммаРаспределили + СуммаЗатрат;
									
									
									// Если это последняя строка - скорректируем сумму в ней на ошибку округления.
									Если ТаблицаБазы.Индекс(НаправлениеРаспределения) = КоличествоНаправлений Тогда
										СуммаЗатрат = СуммаЗатрат + СуммаКРаспределению - СуммаРаспределили;
										СуммаРаспределили = СуммаРаспределили + СуммаЗатрат;
									КонецЕсли;

									Если СуммаЗатрат <> 0 Тогда

										// Движения по регистру Финансовый результат.
										НоваяСтрока	= НаборЗаписейФинансовыйРезультат.Добавить();
										НоваяСтрока.Период = Дата;
										НоваяСтрока.Регистратор	= Ссылка;
										НоваяСтрока.Организация	= НаправлениеРаспределения.Организация;
										НоваяСтрока.СтруктурнаяЕдиница = НаправлениеРаспределения.СтруктурнаяЕдиница;
										НоваяСтрока.Проект = НаправлениеРаспределения.Проект;
										НоваяСтрока.НаправлениеДеятельности	= НаправлениеРаспределения.НаправлениеДеятельности;
										НоваяСтрока.ЗаказПокупателя	= НаправлениеРаспределения.Заказ;

										НоваяСтрока.СчетУчета = ОбходПоСчетамУчета.СчетУчета;
										НоваяСтрока.Аналитика = ОбходПоСчетамУчета.Аналитика;
										Если ОбходПоСчетамУчета.СуммаДоходов <> 0 Тогда
											НоваяСтрока.СуммаДоходов = СуммаЗатрат;
										ИначеЕсли ОбходПоСчетамУчета.СуммаРасходов <> 0 Тогда
											НоваяСтрока.СуммаРасходов = СуммаЗатрат;
										КонецЕсли;

										НоваяСтрока.СодержаниеПроводки = "Финансовый результат";

										// Движения по регистру Управленческий.
										НоваяСтрока = НаборЗаписейУправленческий.Добавить();
										НоваяСтрока.Период = Дата;
										НоваяСтрока.Регистратор = Ссылка;
										НоваяСтрока.Организация = НаправлениеРаспределения.Организация;
										НоваяСтрока.СценарийПланирования = Справочники.СценарииПланирования.Фактический;

										Если ОбходПоСчетамУчета.СуммаДоходов <> 0 Тогда
											НоваяСтрока.СчетДт = ОбходПоСчетамУчета.СчетУчета;
											НоваяСтрока.СчетКт = НаправлениеРаспределения.СчетУчетаПрибыли;
											НоваяСтрока.Сумма = СуммаЗатрат; 
										ИначеЕсли ОбходПоСчетамУчета.СуммаРасходов <> 0 Тогда
											НоваяСтрока.СчетДт = НаправлениеРаспределения.СчетУчетаПрибыли;
											НоваяСтрока.СчетКт = ОбходПоСчетамУчета.СчетУчета;
											НоваяСтрока.Сумма = СуммаЗатрат;
										КонецЕсли;

										НоваяСтрока.Содержание = "Финансовый результат";

									КонецЕсли;

								КонецЦикла;
								
								Если СуммаРаспределили = 0 Тогда

									ОписаниеОшибки = СформироватьОписаниеОшибкиРаспределенияРасходов(
									ОбходПоСчетамУчета.СчетУчета,
									ОбходПоЗаказ.СчетУчетаСпособРаспределения,
									?(ОбходПоСчетамУчета.СуммаДоходов <> 0,
									ОбходПоСчетамУчета.СуммаДоходов,
									ОбходПоСчетамУчета.СуммаРасходов));
									ДобавитьОшибкуВТаблицу(ОписаниеОшибки, "РасчетФинансовогоРезультата", ТаблицаОшибок);
									Продолжить;

								КонецЕсли;

							КонецЕсли

						КонецЦикла;

					КонецЦикла;

				КонецЦикла;

			КонецЦикла;

		КонецЦикла;

	КонецЦикла;

	// Пишем Финансовый результат.
	НаборЗаписейФинансовыйРезультат.Записать(Ложь);
	НаборЗаписейФинансовыйРезультат.Очистить();

	// Пишем Управленческий.
	НаборЗаписейУправленческий.Записать(Ложь);
	НаборЗаписейУправленческий.Очистить();

КонецПроцедуры
