#Область СлужебныеПроцедурыИФункции

// Формирует пакет документов для задания на работу
//
// Параметры:
// МассивДокументов - Массив
// 	* ДокументСсылка.ЗаданиеНаРаботу
//
Процедура СформироватьДокументы(МассивДокументов) Экспорт
	
	ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоматическое формирование документов'"),
							 УровеньЖурналаРегистрации.Информация,
							 Метаданные.Обработки.Пр_ФормированиеПакетаДокументов,,
							 НСтр("ru = 'Начало операции'"));
	
	Дата = ТекущаяДатаСеанса();
		
	ОсновнаяОрганизация = Справочники.Организации.ОрганизацияПоУмолчанию();
	ОсновнаяКасса = Справочники.Кассы.ПолучитьКассуПоУмолчанию(ОсновнаяОрганизация); 
    ОсновнаяВалюта = Константы.ВалютаУчета.Получить();
	ОсновнойБанковскийСчет = Справочники.БанковскиеСчета.БанковскийСчетСубъекта(ОсновнаяОрганизация, ОсновнаяВалюта);
	ВидСтавкиНДСПоУмолчанию = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнаяОрганизация, "ВидСтавкиНДСПоУмолчанию", Истина);
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	ТекущийСотрудник = РегистрыСведений.СотрудникиПользователя.ПолучитьСотрудниковПользователя(ТекущийПользователь)[0];
	ПодразделениеПрограммисты = Справочники.СтруктурныеЕдиницы.НайтиПоНаименованию("Программисты");
	
	ОсновноеНалогообложение = НалогиУНФ.НалогообложениеНДС(ОсновнаяОрганизация,,Дата);
	ОсновнаяСтавкаНДС = Справочники.СтавкиНДС.СтавкаНДС(ВидСтавкиНДСПоУмолчанию, Дата);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КурсыВалютСрезПоследних.Курс КАК Курс,
		|	КурсыВалютСрезПоследних.Кратность КАК Кратность
		|ИЗ
		|	РегистрСведений.КурсыВалют.СрезПоследних(&Дата, Валюта = &Валюта) КАК КурсыВалютСрезПоследних";
	
	Запрос.УстановитьПараметр("Валюта", ОсновнаяВалюта);
	Запрос.УстановитьПараметр("Дата", Дата);
	ТЧРезультат = Запрос.Выполнить().Выгрузить();
	Если ТЧРезультат.Количество() Тогда
		ЗначенияВалюты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТЧРезультат[0]);	
	Иначе
		ЗначенияВалюты = Новый Структура("Курс, Кратность", 1, 1);	
	КонецЕсли;
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ЗаданиеНаРаботуРаботы.Ссылка.Ссылка КАК ЗаданиеНаРаботу,
		|	ЗаданиеНаРаботуРаботы.Ссылка.Дата КАК Дата,
		|	ЗаданиеНаРаботуРаботы.Ссылка.Пр_Проект КАК Проект,
		|	ЗаданиеНаРаботуРаботы.Заказчик КАК Заказчик,
		|	ЗаданиеНаРаботуРаботы.Номенклатура КАК Номенклатура,
		|	ЗаданиеНаРаботуРаботы.Трудоемкость КАК Трудоемкость,
		|	ЗаданиеНаРаботуРаботы.Цена КАК Цена,
		|	ЗаданиеНаРаботуРаботы.Сумма КАК Сумма,
		|	Проекты.Контрагент КАК Контрагент
		|ИЗ
		|	Документ.ЗаданиеНаРаботу.Работы КАК ЗаданиеНаРаботуРаботы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Проекты КАК Проекты
		|		ПО ЗаданиеНаРаботуРаботы.Ссылка.Пр_Проект = Проекты.Ссылка
		|ГДЕ
		|	ЗаданиеНаРаботуРаботы.Ссылка В(&МассивДокументов)
		|ИТОГИ ПО
		|	Контрагент";
	
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);		
	ВыборкаКонтрагент = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКонтрагент.Следующий() Цикл
		
		ОсновнойДоговор = Справочники.ДоговорыКонтрагентов.ДоговорПоУмолчанию(ВыборкаКонтрагент.Контрагент);
		Выборка = ВыборкаКонтрагент.Выбрать();
		
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка                                    
			
			Событие = Документы.Событие.СоздатьДокумент();
			Событие.Дата = Дата;
			Событие.Автор = ТекущийПользователь;
			Событие.Важность = Перечисления.ВариантыВажности.Обычная; 
			Событие.Ответственный = ТекущийСотрудник;
			Событие.ТипСобытия = Перечисления.ТипыСобытий.Прочее;
			Событие.ХозяйственнаяОперация = Справочники.ХозяйственныеОперации.Событие;
			Событие.Тема = НСтр("ru = 'Автоматическое формирование документов. Разработка по часам'"); 
			Событие.Содержание = НСтр("ru = 'Разработка по часам'");
								 
			Событие.Состояние = Справочники.СостоянияСобытий.Завершено;
			
			СчетНаОплату = Документы.СчетНаОплату.СоздатьДокумент();
			СчетНаОплату.Дата = Дата;
			СчетНаОплату.Автор = ТекущийПользователь;
			СчетНаОплату.БанковскийСчет = ОсновнойБанковскийСчет;
			СчетНаОплату.ВалютаДокумента = ОсновнаяВалюта;
			СчетНаОплату.Договор = ОсновнойДоговор;
			СчетНаОплату.Касса = ОсновнаяКасса;
			СчетНаОплату.Комментарий = НСтр("ru = 'Создано автоматическим формированием документов'");
			СчетНаОплату.Контрагент = ВыборкаКонтрагент.Контрагент;
			СчетНаОплату.Курс = ЗначенияВалюты.Курс;
			СчетНаОплату.Кратность = ЗначенияВалюты.Кратность; 
			СчетНаОплату.НалогообложениеНДС = ОсновноеНалогообложение;
			СчетНаОплату.Организация = ОсновнаяОрганизация;
			СчетНаОплату.Ответственный = ТекущийСотрудник; 
			СчетНаОплату.Подразделение = ПодразделениеПрограммисты;
			СчетНаОплату.СуммаВключаетНДС = Истина;
			СчетНаОплату.ХозяйственнаяОперация = Справочники.ХозяйственныеОперации.СчетНаОплату;
			
			АктВыполненныхРабот = Документы.АктВыполненныхРабот.СоздатьДокумент();
			АктВыполненныхРабот.Дата = Дата;
			АктВыполненныхРабот.Автор = ТекущийПользователь;
			АктВыполненныхРабот.ВалютаДокумента = ОсновнаяВалюта;
			АктВыполненныхРабот.Договор = ОсновнойДоговор; 
			АктВыполненныхРабот.Комментарий = НСтр("ru = 'Создано автоматическим формированием документов'"); 
			АктВыполненныхРабот.Контрагент = ВыборкаКонтрагент.Контрагент;
			АктВыполненныхРабот.Курс = ЗначенияВалюты.Курс;
			АктВыполненныхРабот.Кратность = ЗначенияВалюты.Кратность;
			АктВыполненныхРабот.НалогообложениеНДС = ОсновноеНалогообложение;
			АктВыполненныхРабот.Организация = ОсновнаяОрганизация;
			АктВыполненныхРабот.Ответственный = ТекущийСотрудник;
			АктВыполненныхРабот.Подразделение = ПодразделениеПрограммисты;
			АктВыполненныхРабот.СуммаВключаетНДС = Истина;
			АктВыполненныхРабот.ХозяйственнаяОперация = Справочники.ХозяйственныеОперации.АктВыполненныхРабот;
			
			Пока Выборка.Следующий() Цикл 
				
				Попытка   
					
					ЗаданиеНаРаботуОбъект = Выборка.ЗаданиеНаРаботу.ПолучитьОбъект();
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить("Документ.ЗаданиеНаРаботу");
					ЭлементБлокировки.УстановитьЗначение("Ссылка", Выборка.ЗаданиеНаРаботу);
					ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
					Блокировка.Заблокировать();
					
					ЗаданиеНаРаботуОбъект.Состояние = Справочники.СостоянияСобытий.Завершено;
					ЗаданиеНаРаботуОбъект.Записать();
					
				Исключение  
					
					ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоматическое формирование документов'"),
											 УровеньЖурналаРегистрации.Ошибка,
											 Метаданные.Документы.ЗаданиеНаРаботу,
											 Выборка.ЗаданиеНаРаботу,
											 СтрШаблон(НСтр("ru = 'Объект был пропущен по причине: %1'"),
											 ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
					Продолжить;  
					
				КонецПопытки; 
				
				Событие.ДокументыОснования.Добавить().ДокументОснование = Выборка.ЗаданиеНаРаботу;
								
				СтрокаЗапасов = СчетНаОплату.Запасы.Добавить();
				СтрокаЗапасов.Номенклатура = Выборка.Номенклатура;
				СтрокаЗапасов.Количество = Выборка.Трудоемкость;
				СтрокаЗапасов.ЕдиницаИзмерения = Справочники.КлассификаторЕдиницИзмерения.ч;
				СтрокаЗапасов.Цена = Выборка.Цена;
				СтрокаЗапасов.СтавкаНДС = ОсновнаяСтавкаНДС;
				
				СтавкаНДСЧислом = УправлениеНебольшойФирмойПовтИсп.ПолучитьЗначениеСтавкиНДС(ОсновнаяСтавкаНДС);
				СтрокаЗапасов.СуммаНДС = Выборка.Сумма * СтавкаНДСЧислом / 100;  
				СтрокаЗапасов.Сумма = Выборка.Сумма - СтрокаЗапасов.СуммаНДС;
				СтрокаЗапасов.Всего = Выборка.Сумма;
				
				НоваяРабота = АктВыполненныхРабот.РаботыИУслуги.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяРабота, СтрокаЗапасов);
				НоваяРабота.Проект = Выборка.Проект;
				
			КонецЦикла;
			
			Событие.Записать();
			СчетНаОплату.Событие = Событие.Ссылка;
			СчетНаОплату.Записать(РежимЗаписиДокумента.Проведение);
			
			АктВыполненныхРабот.ДокументОснование = СчетНаОплату.Ссылка; 
			АктВыполненныхРабот.ОснованиеПечатиСсылка = СчетНаОплату.Ссылка;	

			АктВыполненныхРабот.РаботыИУслуги.Свернуть("Номенклатура, Характеристика, ЕдиницаИзмерения, Цена, СтавкаНДС, Проект",
							 "Количество, Сумма, СуммаНДС, Всего");
			АктВыполненныхРабот.Записать(РежимЗаписиДокумента.Проведение);
			
			ЗафиксироватьТранзакцию(); 			

		Исключение
			
			Если ТранзакцияАктивна() Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
			
			ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоматическое формирование документов'"),
									 УровеньЖурналаРегистрации.Ошибка,
									 Метаданные.Обработки.Пр_ФормированиеПакетаДокументов,,
									 СтрШаблон(НСтр("ru = 'Объект был пропущен по причине: %1'"),
									 ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
			
		КонецПопытки;

		
	КонецЦикла;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Автоматическое формирование документов'"),
							 УровеньЖурналаРегистрации.Информация,
							 Метаданные.Обработки.Пр_ФормированиеПакетаДокументов,,
							 НСтр("ru = 'Конец операции'"));

КонецПроцедуры

#КонецОбласти