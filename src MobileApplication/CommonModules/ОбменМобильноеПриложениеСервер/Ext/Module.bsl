#Область ПрограммныйИнтерфнйс

// Записывает полученные данные в ИБ
//
// Параметры:
// АдресДанных - Строка
// Менеджер - ПроизвольныйТип
//   
// Возвращаемое значение:
// ПроизвольныйТип
//
Функция ЗаписатьДанныеОтвета(Знач АдресДанных, Знач Менеджер) Экспорт

	ПолученныеДанные = ПолучитьИзВременногоХранилища(АдресДанных);
	ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗнч(Менеджер.ПустаяСсылка()));	 
	РодительМетеданных = ОбъектМетаданных.Родитель();    
				
	ЗаписанныеДанные = Новый Массив;
	
	Для Каждого ОбъектДанных Из ПолученныеДанные Цикл
		
		НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
		Попытка
			
			Если ОбъектДанных.Свойство("УУИД") Тогда
				ДанныеИБ = Менеджер.ПолучитьСсылку(Новый УникальныйИдентификатор(ОбъектДанных.УУИД));
			Иначе
				ДанныеИБ = Неопределено;
			КонецЕсли;
			
			ДанныеИБОбъект = Неопределено;
			
			Если ДанныеИБ <> Неопределено И Не ДанныеИБ.Пустая() Тогда     
				
				ДанныеИБОбъект = ДанныеИБ.ПолучитьОбъект();
				
				Блокировка = Новый БлокировкаДанных;
				ЭлементБлокировки = Блокировка.Добавить(ОбъектМетаданных.ПолноеИмя());
				ЭлементБлокировки.УстановитьЗначение("Ссылка", ДанныеИБ);
				ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
				Блокировка.Заблокировать();     
				
			Иначе      
				
				ЕстьУУИД = Ложь;
				Если РодительМетеданных = Метаданные.Справочники Тогда
					
					Если ОбъектДанных.Свойство("ЭтоГруппа") И ОбъектДанных.ЭтоГруппа Тогда
						ДанныеИБОбъект = Менеджер.СоздатьГруппу(); 
					Иначе
						ДанныеИБОбъект = Менеджер.СоздатьЭлемент();
					КонецЕсли;
					
					ЕстьУУИД = Истина;
					
				ИначеЕсли РодительМетеданных = Метаданные.Документы Тогда
					
					ДанныеИБОбъект = Менеджер.СоздатьДокумент();
					ЕстьУУИД = Истина;
					
				ИначеЕсли РодительМетеданных = Метаданные.РегистрыСведений Тогда
					
					ДанныеИБОбъект = Менеджер.СоздатьМенеджерЗаписи();    
					
				КонецЕсли;
				
				Если ЕстьУУИД Тогда
					ДанныеИБОбъект.УстановитьСсылкуНового(ДанныеИБ);	
				КонецЕсли;
				
			КонецЕсли;      
			
			Для Каждого ЭлементСтруктуры Из ОбъектДанных Цикл     
				
				Если ТипЗнч(ЭлементСтруктуры.Значение) = Тип("Структура") Тогда
					
					ДополнительныйОбъект = ЭлементСтруктуры.Значение;
					АдресДополнительногоОбъекта = ПоместитьВоВременноеХранилище(ДополнительныйОбъект);
					ДополнительныеОбъекты = ЗаписатьДанныеОтвета(АдресДополнительногоОбъекта, ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ДополнительныйОбъект.ПолноеИмя));
					Если ДополнительныеОбъекты.Количество() Тогда
						ДанныеИБОбъект[ЭлементСтруктуры.Ключ] = ДополнительныеОбъекты[0];
					КонецЕсли;
					
				Иначе    
					
					Если ЭлементСтруктуры.Ключ = "УУИД" Или ЭлементСтруктуры.Ключ = "ПолноеИмя" Тогда
						Продолжить;
					КонецЕсли;
					
					ДанныеИБОбъект[ЭлементСтруктуры.Ключ] = ЭлементСтруктуры.Значение;   
					
				КонецЕсли;
				
			КонецЦикла;
			ЗаполнитьЗначенияСвойств(ДанныеИБОбъект, ОбъектДанных);
			ДанныеИБОбъект.ОбменДанными.Загрузка = Истина;
			
			Если ОбъектДанных.Свойство("Проведен") И ОбъектДанных.Проведен Тогда 
				
				ДанныеИБОбъект.Записать(РежимЗаписиДокумента.Проведение);    
				ЗаписанныеДанные.Добавить(ДанныеИБОбъект.Ссылка);
				
			Иначе                      
				
				ДанныеИБОбъект.Записать();
				Если РодительМетеданных <> Метаданные.РегистрыСведений Тогда
					ЗаписанныеДанные.Добавить(ДанныеИБОбъект.Ссылка);
				КонецЕсли;
				
			КонецЕсли;
			ЗафиксироватьТранзакцию();
			
		Исключение
			Если ТранзакцияАктивна() Тогда
				ОтменитьТранзакцию();
			КонецЕсли;
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат Новый ФиксированныйМассив(ЗаписанныеДанные);
	
КонецФункции

// Возвращает адрес сервера десктоп приложения
//
// Возвращаемое значение:
// Строка
//
Функция АдресДесктопПриложения() Экспорт
	
	Возврат Константы.АдресДесктопПриложения.Получить();
	
КонецФункции

#КонецОбласти